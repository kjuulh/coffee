/*
 * Gitea API.
 *
 * This documentation describes the Gitea API.
 *
 * The version of the OpenAPI document: 1.20.0+rc0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// LicenseTemplateInfo : LicensesInfo contains information about a License



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LicenseTemplateInfo {
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    #[serde(rename = "implementation", skip_serializing_if = "Option::is_none")]
    pub implementation: Option<String>,
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl LicenseTemplateInfo {
    /// LicensesInfo contains information about a License
    pub fn new() -> LicenseTemplateInfo {
        LicenseTemplateInfo {
            body: None,
            implementation: None,
            key: None,
            name: None,
            url: None,
        }
    }
}


